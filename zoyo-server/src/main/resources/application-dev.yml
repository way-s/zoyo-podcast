server:
  port: 8888

spring:
  datasource:
    name: datasource
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://127.0.0.1:3306/zoyo?serverTimezone=GMT%2B8
    username: root
    password: 123456
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      time-between-eviction-runs-millis: 300000
  redis:
    host: 127.0.0.1
    port: 8909
    password: 123456
    timeout: 10000 # 连接超时时间（毫秒）
    database: 0 # 数据库索引 默认0
    jedis:
      pool:
        max-active: 10 # 连接池最大连接数（使用负值表示没有限制）
        max-idle: 10 # 连接池中的最大空闲连接
        max-wait: -1 # 连接池最大阻塞等待时间（使用负值表示没有限制）
        min-idle: 0 # 连接池中的最小空闲连接
  # rabbitMq
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    # rabbitMQ 服务创建的虚拟主机（非必须），默认 /
    #    virtual-host: /mqs
    # 开启消息确认模式
    # 是否返回回调
    publisher-returns: true
    template:
      # 开启mandatory: true, basic.return方法将消息返还给生产者
      mandatory: true
#    listener:
#      #      容器类型
#      #      direct:
#      #        acknowledge-mode: manual
#      simple:
#        # 手动应答 manual ；自动签收 auto
#        acknowledge-mode: manual # none
#        # 最小消费者数量
#        concurrency: 1
#        # 最多消费者数量
#        max-concurrency: 10
#        # 支持重试
#        retry:
#          enabled: true
#          # 最大重试次数
#          max-attempts: 2
# netty-socket.io 配置
socket-io:
  host: localhost
  port: 8889
  # 设置最大每帧处理数据的长度，防止他人利用大数据来攻击服务器
  maxFramePayloadLength: 1048576
  # 设置http交互最大内容长度
  maxHttpContentLength: 1048576
  # socket连接数大小（如只监听一个端口boss线程组为1即可）
  bossCount: 1
  workCount: 100
  allowCustomRequests: true
  # 协议升级超时时间（毫秒），默认10秒。HTTP握手升级为ws协议超时时间
  upgradeTimeout: 1000000
  # Ping消息超时时间（毫秒），默认60秒，这个时间间隔内没有接收到心跳消息就会发送超时事件
  pingTimeout: 6000000
  # Ping消息间隔（毫秒），默认25秒。客户端向服务器发送一条心跳消息间隔
  pingInterval: 25000

secure:
  roster:
    admin-urls:
      - /st/admin
    ignored-urls: # 白名单，不需要权限认证
      - /user/hello
      - /user/reg/**
      - /user/login/**
      - /box/t1